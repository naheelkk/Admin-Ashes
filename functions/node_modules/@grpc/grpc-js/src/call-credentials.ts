a812-43d7-87fc-335159cd867b.f1f777e7-1e5b-4168-8751-db780dcff695","Height":310,"Width":310},{"$type":"Microsoft.Marketplace.Storefront.Contracts.V2.ImageItem, Microsoft.Marketplace.Storefront.Contracts","ImageType":"tile","BackgroundColor":"transparent","ForegroundColor":"","Caption":"","ImagePositionInfo":"","Url":"https://store-images.s-microsoft.com/image/apps.62011.14618985536919905.3e754390-a812-43d7-87fc-335159cd867b.20cc8541-b434-4bab-9c83-0e1ed1d9d1dc","Height":465,"Width":465},{"$type":"Microsoft.Marketplace.Storefront.Contracts.V2.ImageItem, Microsoft.Marketplace.Storefront.Contracts","ImageType":"tile","BackgroundColor":"transparent","ForegroundColor":"","Caption":"","ImagePositionInfo":"","Url":"https://store-images.s-microsoft.com/image/apps.16730.14618985536919905.3e754390-a812-43d7-87fc-335159cd867b.433b2d6b-1694-4511-b3c6-4dcaf99d3bbe","Height":620,"Width":620},{"$type":"Microsoft.Marketplace.Storefront.Contracts.V2.ImageItem, Microsoft.Marketplace.Storefront.Contracts","ImageType":"tile","BackgroundColor":"transparent","ForegroundColor":"","Caption":"","ImagePositionInfo":"","Url":"https://store-images.s-microsoft.com/image/apps.29550.14618985536919905.3e754390-a812-43d7-87fc-335159cd867b.25314011-4295-4710-9adf-fac06f532781","Height":150,"Width":310},{"$type":"Microsoft.Marketplace.Storefront.Contracts.V2.ImageItem, Microsoft.Marketplace.Storefront.Contracts","ImageType":"tile","BackgroundColor":"transparent","ForegroundColor":"","Caption":"","ImagePositionInfo":"","Url":"https://store-images.s-microsoft.com/image/apps.5607.14618985536919905.3e754390-a812-43d7-87fc-335159cd867b.953b1fd2-051b-4aab-a397-9e5108e56daf","Height":225,"Width":465},{"$type":"Microsoft.Marketplace.Storefront.Contracts.V2.ImageItem, Microsoft.Marketplace.Storefront.Contracts","ImageType":"tile","BackgroundColor":"transparent","ForegroundColor":"","Caption":"","ImagePositionInfo":"","Url":"https://store-images.s-microsoft.com/image/apps.41049.14618985536919905.3e754390-a812-43d7-87fc-335159cd867b.03cdfb73-8a71-4791-811b-b0beb1e5b7f7","Height":300,"Width":620}],"Previews":[{"$type":"Microsoft.Marketplace.Storefront.Contracts.V2.ImageItem, Microsoft.Marketplace.Storefront.Contracts","ImageType":"Screenshot","BackgroundColor":"transparent","ForegroundColor":"","Caption":"","ImagePositionInfo":"Desktop/0","Url":"https://store-images.s-microsoft.com/image/apps.43161.14618985536919905.8dba05ea-8d99-4ec6-9ba8-a93ce836ccac.8d5ed48c-2e09-4a83-86ea-d2b525e329f4","Height":768,"Width":1366}],"DisplayPrice":"Free","Price":0.0,"AverageRating":4.2,"RatingsCount":"11K","Description":"Watch movies and TV shows recommended for you, including award-winning Amazon Originals and more. Download videos to your Windows 10 PC, laptop or tablet to watch offline - anywhere, anytime.","PackageFamilyNames":["AmazonVideo.PrimeVideo_pwbj9vvecjh7j"],"ContentIds":["4ca34d84-b42a-3de9-6c34-0c3405ef7853"],"GamingOptionsXboxLive":false,"AvailableDevicesDisplayText":"î±Ž","AvailableDevicesNarratorText":"PC","TypeTag":"app","ProductFamilyName":"Apps","SkusSummary":[{"$type":"Microsoft.Marketplace.Storefront.Contracts.V8.SkuSummary, Microsoft.Marketplace.Storefront.Contracts","SkuId":"0010","MSRP":0.0,"DisplayMSRP":"Free","SalePrices":[{"$type":"Microsoft.Marketplace.Storefront.Contracts.V9.SalePrice, Microsoft.Marketplace.Storefront.Contracts","Price":0.0,"DisplayPrice":"Free","BadgeId":"default"}]},{"$type":"Microsoft.Marketplace.Storefront.Contracts.V8.SkuSummary, Microsoft.Marketplace.Storefront.Contracts","SkuId":"0011"}],"IsGamingAppOnly":false,"Categories":["Entertainment"],"ReleaseDate":"2020-02-24T17:58:39.4698367Z","PublisherName":"Amazon Development Centre (London) Ltd","Installer":{"$type":"Microsoft.Marketplace.Storefront.Contracts.V9.Installer, Microsoft.Marketplace.Storefront.Contracts","Type":"WindowsUpdate","Id":"9P6RC76MSMMJ"},"ProductRatings":[{"$type":"Microsoft.Marketplace.Storefront.Contracts.V2.ProductRating, Microsoft.Marketplace.Storefront.Contracts","RatingSystem":"IARC","RatingSystemShortName":"IARC","RatingSystemId":"IARC","RatingSystemUrl":   getHeaders.then(
        (headers) => {
          const metadata = new Metadata();
          for (const key of Object.keys(headers)) {
            metadata.add(key, headers[key]);
          }
          callback(null, metadata);
        },
        (err) => {
          callback(err);
        }
      );
    });
  }

  static createEmpty(): CallCredentials {
    return new EmptyCallCredentials();
  }
}

class ComposedCallCredentials extends CallCredentials {
  constructor(private creds: CallCredentials[]) {
    super();
  }

  async generateMetadata(options: CallMetadataOptions): Promise<Metadata> {
    const base: Metadata = new Metadata();
    const generated: Metadata[] = await Promise.all(
      this.creds.map((cred) => cred.generateMetadata(options))
    );
    for (const gen of generated) {
      base.merge(gen);
    }
    return base;
  }

  compose(other: CallCredentials): CallCredentials {
    return new ComposedCallCredentials(this.creds.concat([other]));
  }

  _equals(other: CallCredentials): boolean {
    if (this === other) {
      return true;
    }
    if (other instanceof ComposedCallCredentials) {
      return this.creds.every((value, index) =>
        value._equals(other.creds[index])
      );
    } else {
      return false;
    }
  }
}

class SingleCallCredentials extends CallCredentials {
  constructor(private metadataGenerator: CallMetadataGenerator) {
    super();
  }

  generateMetadata(options: CallMetadataOptions): Promise<Metadata> {
    return new Promise<Metadata>((resolve, reject) => {
      this.metadataGenerator(options, (err, metadata) => {
        if (metadata !== undefined) {
          resolve(metadata);
        } else {
          reject(err);
        }
      });
    });
  }

  compose(other: CallCredentials): CallCredentials {
    return new ComposedCallCredentials([this, other]);
  }

  _equals(other: CallCredentials): boolean {
    if (this === other) {
      return true;
    }
    if (other instanceof SingleCallCredentials) {
      return this.metadataGenerator === other.metadataGenerator;
    } else {
      return false;
    }
  }
}

class EmptyCallCredentials extends CallCredentials {
  generateMetadata(options: CallMetadataOptions): Promise<Metadata> {
    return Promise.resolve(new Metadata());
  }

  compose(other: CallCredentials): CallCredentials {
    return other;
  }

  _equals(other: CallCredentials): boolean {
    return other instanceof EmptyCallCredentials;
  }
}
