"use strict";
/**
 * Copyright (C) 2016-2019 Michael Kourlas
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var error_1 = require("../error");
var options_1 = require("../options");
var validate_1 = require("../validate");
var XmlAttribute_1 = __importDefault(require("./XmlAttribute"));
var XmlCdata_1 = __importDefault(require("./XmlCdata"));
var XmlCharData_1 = __importDefault(require("./XmlCharData"));
var XmlCharRef_1 = __importDefault(require("./XmlCharRef"));
var XmlComment_1 = __importDefault(require("./XmlComment"));
var XmlEntityRef_1 = __importDefault(require("./XmlEntityRef"));
var XmlProcInst_1 = __importDefault(require("./XmlProcInst"));
/**
 * Represents an XML element.
 *
 * A sample element is structured as follows, where `{name}` is the name
 * of the element:
 *
 * ```xml
 * <{name} attname="attvalue">
 *     <subelem/>
 *     <?pitarget picontent?>
 *     text
 * </{name}></pre>
 * ```
 *
 * XML elements can have an unlimited number of attributes, CDATA sections,
 * character references, comments, elements, entity references, processing
 * instructions, and character data.
 *
 * An element with no content will be represented using an empty element tag:
 *
 * ```xml
 * <{name}/>
 * ```
 */
var XmlElement = /** @class */ (function () {
    function XmlElement(parent, validation, options) {
        this._validation = validation;
        if (!(0, validate_1.isUndefined)(options.replaceInvalidCharsInName)) {
            this._replaceInvalidCharsInName = options.replaceInvalidCharsInName;
        }
        else {
            this._replaceInvalidCharsInName = false;
        }
        if (!(0, validate_1.isUndefined)(options.useSelfClosingTagIfEmpty)) {
            this._useSelfClosingTagIfEmpty = options.useSelfClosingTagIfEmpty;
        }
        else {
            this._useSelfClosingTagIfEmpty = true;
        }
        this._children = [];
        this._attributeNames = [];
        this._parent = parent;
        this.name = options.name;
    }
    Object.defineProperty(XmlElement.prototype, "name", {
        /**
         * Gets the name of this element.
         */
        get: function () {
            return this._name;
        },
        /**
         * Sets the name of this element.
         */
        set: function (name) {
            if (this._replaceInvalidCharsInName) {
                name = (0, validate_1.fixName)(name);
                if (name.length === 0) {
                    throw new Error((0, error_1.getContext)(this.up()) + ": element name should"
                        + " not be empty");
                }
            }
            else if (this._validation && !(0, validate_1.validateName)(name)) {
                if (name.length === 0) {
                    throw new Error((0, error_1.getContext)(this.up()) + ": element name should"
                        + " not be empty");
                }
                else {
                    throw new Error((0, error_1.getContext)(this.up()) + ": element name"
                        + (" \"" + name + "\" should not contain characters not")
                        + " allowed in XML names");
                }
            }
            this._name = name;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * Adds an attribute to this element and returns the new attribute.
     */
    XmlElement.prototype.attribute = function (options) {
        if (this._validation
            && this._attributeNames.indexOf(options.name) !== -1) {
            throw new Error((0, error_1.getContext)(this.up()) + ": element \"" + this.name + "\""
                + " already contains an attribute with the"
                + (" name \"" + options.name + "\""));
        }
        var attribute = new XmlAttribute_1.default(this, this._validation, options);
        this._children.push(attribute);
        this._attributeNames.push(options.name);
        return attribute;
    };
    /**
     * Adds a CDATA section to this element and returns the new CDATA section.
     */
    XmlElement.prototype.cdata = function (options) {
        var cdata = new XmlCdata_1.default(this, this._validation, options);
        this._children.push(cdata);
        return cdata;
    };
    /**
     * Adds character data to this element and returns the new character data.
     */
    XmlElement.prototype.charData = function (options) {
        var charDataNode = new XmlCharData_1.default(this, this._validation, options);
        this._children.push(charDataNode);
        return charDataNode;
    };
    /**
     * Adds a character reference to this element and returns the new
     * character reference.
     */
    XmlElement.prototype.charRef = function (options) {
        var charRef = new XmlCharRef_1.default(this, this._validation, options);
        this._children.push(charRef);
        return charRef;
    };
    /**
     * Adds a comment to this element and returns the new comment.
     */
    XmlElement.prototype.comment = function (options) {
        var comment = new XmlComment_1.default(this, this._validation, options);
        this._children.push(comment);
        return comment;
    };
    /**
     * Adds an element to this element and returns the new element.
     */
    XmlElement.prototype.element = function (options) {
        var element = new XmlElement(this, this._validation, options);
        this._children.push(element);
        return element;
    };
    /**
     * Adds an entity reference to this element and returns the new entity
     * reference.
     */
    XmlElement.prototype.entityRef = function (options) {
        var entityRef = new XmlEntityRef_1.default(this, this._validation, options);
        this._children.push(entityRef);
        return entityRef;
    };
    /**
     * Adds a processing instruction to this element and returns the new
     * processing instruction.
     */
    XmlElement.prototype.procInst = function (options) {
        var procInst = new XmlProcInst_1.default(this, this._validation, options);
        this._children.push(procInst);
        return procInst;
    };
    /**
     * Returns an XML string representation of this element using the specified
     * options.
     */
    XmlElement.prototype.toString = function (options) {
        if (options === void 0) { options = {}; }
        return this.toStringWithIndent(options, "");
    };
    /**
     * Returns the parent of this element.
     */
    XmlElement.prototype.up = function () {
        return this._parent;
    };
    /**
     * Returns an XML string representation of this element using the specified
     * options and initial indent.
     */
    XmlElement.prototype.toStringWithIndent = function (options, indent) {
        var optionsObj = new options_1.StringOptions(options);
        var newIndent = indent + optionsObj.indent;
        // Element tag start
        var str = "<" + this._name;
        // Attributes and other nodes
        var nodes = [];
        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {
            var node = _a[_i];
            if (node instanceof XmlAttribute_1.default) {
                str += " " + node.toString(options);
            }
            else {
                nodes.push(node);
            }
        }
Xmm, 
Ö} •mÔàkppÉ¶˘ˇ§üK£ßRÌO¶5É%¶nÊØ· <•—˚V—πg
Äa§˙ù‹ß‘œ¬Í=≈ëóŸSÓyI"s≤≈»'Hç‡≥≈
	(ò#oPp®˙x6äÇ…≠˛HÄ◊≥Ù˘ÍH·ÿOÈ»Nu¶ç2DÉÄQÍ‰#Ó!ﬂom=jˆ*ÿ≈≤kÅŒ÷ﬁÒ<Ì≥ÆîI‘GÇæΩ#z˝∂é∏LØ¶ı©)ÄU˙¥æmX_÷¶IØÈ“H∫{†)Ó≥Î(w˘√ˇõç^À¬›¢Ò¬˛˝kXt7¥õÁP’∂FﬁV´–êÎçÅNçÈ3|ı	L¨3√}Î-aQœ>ÓîE¢“÷Äß∏ßUYx9p	µŒz+Ì•´5*AXáUD√âoHÔa˜»ú†ÙŒ…Y#∆0Ù,®ïÃ‘µ≥·≥™ÔmòóŸbå\÷Æå“ å—tî—∫∂Wµ#(ì_πn=0@⁄Ã–`Åc|∆÷bŸàYJ[ˇ
HÊ≠6@ç_/GKî9ÙúìÚ8_øõI‡£ör;3Ω*dT ∫»Éhã~Sù'ÆÅ˚x÷°ñUf—*¯¿/Œ¢ÅÉ∂i˝+O˙◊¨-[ÓûØ¡QW∞cUs%Q˘±-Énú#wÂÛô‘Z¬'HvÉÊ%˛Iæ&¨fü¬ﬁã“ã¨«.ô∑êÍÏ"µ«4#'ädröªy∞5S/≠ËƒSeM;a,DZΩlô◊4»‚>µ$KSô=K€ñ2uú™I©ÀDÕHﬁ˛mo≈ß€ÔÁÇ…kg‰∆F*üm»:Fk£	{#Bæƒ˙ÎhU~5õRü;!∂‚®t]&äîÆG!(©ˇ'È\=÷∑'Âø∏‰wˇ∫.} â¥ú@*˘0Ïpùq{!ìÆâ0Z˜ÂX&œèo4?Ò–Ô5Ç"c≠Ö}+_`KoUóÛ2fÔ≤W%Ún–>‚NÚOJ·€’[OÜÙÄ}¡>Ú>ÍËÑ>˜√”*ùèIè∫tàQLñ?˛]Ëf Iå?Iœ'˜í•˘-G¥gö!xH
û¸ñR&~IAñv$ÏMÒÙîÇrhﬁ|ÑZK$ù°%	›ò8∂mnw6ãàì≠¥≠>ÍyD*e®Æ¯˜o®
Æ|Öº«¯™;M“Ìˆ’Kmã´ÏiÓ:ˇ≠r”˘*ùX>ˇ»«ìtµË'^Å*.‚∑‚C0<4√¬üz?1hØŸxØ„=ƒäëØíè›öæ°6<é8‘ñïπc¬cˆa5F>ë•RòF/˝∆Öp∆ÕÉ¥J2∏Eø!Ì∏[Wº>>sWù{ÏˆìT∂˛ôº”ˆ'˛¬_πa…-ß\lÃ¯ëÁºÊûœ;æÈ÷¶|	ﬂ®èí› ÊG∏GXj¡)‰ãd&fû»^t≈-l._ßõâjï≈á?M÷Ê>t|Å"≠œ]kﬂ‡Ì˝¯ÜÆﬁrn¿û∂ÙKˆCµ∆"éÿ´ˇKÌwñ
«(êÖ™•»,kr∂#èm1SÑˇµÀsÛ,õ∞nT^jm›RV¶Ò¸÷-#=≤ºôÜÇd…Ç¥,ÎjåØöƒÁW"fRaú–.FVe€µ±êa¨Œs∑.$@f ûq∫Rî*Iæ2¬?ËMVÕP/rÈ4'o˜êÇıU0	cW6<=Z+ò«}PáE†ﬁ©W&}+±\π'ö~‰ãóbÃã¯‡∫6º¡˝•0&W¯mü¿∑,lΩûÒ§-$eˇ:Àü˛)òº£ˇcUûa‰X^ı†Wºû#‰√∆Ì˘>`&«≠¸€˜∞^™J1Ö¿√⁄%¬eeÏ\≠:ﬁY?c’4≥Œ!ÒÒf£+"5Õ9%!-‰tc8…ärn"öãg≠Êı¯uce0∏&HàµÀ˜]¨^jsÌ÷Éø–à¢ibÓ∑
ç @s	@Ç©><c™`˜Y«=Õƒö2’E†Ø©O÷ıÊÓX≥d[Ç∆{◊Iùl¡qe us ò¿.,©F…ç¢2¢®if´o#Zë´ä∏qÄR9a(€ç3œç‘ïE
%7&Àe´Æ™ı#e∆‘D,ı-∆'ù…JkŸó›14C\ÅÛœ‚ïÊ÷›
¸3Y8›‘¡#¸ıæÆΩN„Óu™i‚wÖÑÓƒ6¡	 µü±Î∆ `Ä^è*":ßZ„ íªi‡ß˛3à”ÃÀ®∫"lLz∑3≈9ìúÉS¥°Ñ¨1äé&s^÷Fèéób&F9J¬3]S«≥k®ˆ¥°˙·•dë}8…ÈáK©•ÓIaÜâ‘ãıu;ó`±®ñˆ\„Å∫2ƒﬂÌØ’∞€óZé{®U«OóR/£}“[9ø^≈n2ÿ{˘¯ ôØ…ö}~O.eÊÅó~Ì‹ 9öÆÓ0®Î£Y˙~ß4ˆò∫¨8∑^yüsÆ©<∆ØHÁ%kœC<ÄüDST∂ÿ,Bä˜èÉà}§-‡ûÍJê.lÊÂèEì@Û»ı9bqó2e‡ÇéŸyÁ[Ù°I@ 2ã3«"!yÌO4yQc√téRÌ∆ËûPb.iÀe§"ﬂVàÇÔµ$ éj9ö ˘©+1È˝◊rÛ
èûû5I2\T“R[Pø◊ˇ,∑⁄AåÖb(Ì±–®˜™]∫P†ä$FΩvh≤¿“≈@ˇuG:oê™‘ıà`+´À	‹eóg¸}Rw„{;ﬂ€å]fJ·WE‚VœQbsÌ|°#\4eSŒ∞lÕ«®ÅÆª¯≈9àÍgéLr¨[\J€¬ÔŸPÆ‚á?—Iﬁé\Ÿ`¢á}˙°IE"•i≈∞3‡RèEk-•%÷ó´º÷xØÿ!Ü≈Ú∫NÛ˚≈<{¥uíÅb"iŒœD,˚_
°∆‡€O%"'Õ˚OòÉKzTº®Ì?Hƒ1[.«O›P<øKÈ°¶X.≥tŒ¢Ôâ¿ãµû·ÕWd¥ üÇh:≠xwyr<¿ÉŸu1^⁄Tô XÚHç3E¸¶
©ÕDhÏÍ{◊:7ze€œ§€yˇÜé_ª€øÛêfHò-¡!≥¡∫4gVÁ5„s+•e5·nt{Pc¯Øy—˚Í•z¯È/%ÂÀÉÑQQÂ(ˆáTXlfYw·˝n#yg∏äG5ôËÁ‰ µÃcm¥r‡113´§7Tíl`yí∫ˇbÈTËÙ‹4ﬂ~B§kM≤UrY®≤fæèúk·õ>√ÓmúME¢W|ycZÄ•≥ÓZBñŸa:ÚwOx.ÒxÏlÏ‰Ωwññx78°Nl°I∑=›ZŸ_Ï\ˆA°#«6◊âOÉC_•UWÜ|3≤ÈªPÜTVˇú∏ˇØ¥Ølﬂ§“æ7V¸@ ñ”ˇ=Ù$¨∏"⁄ì˛pÂÃi‚‘ï›pÑˇGùﬂ>=—Ä∞¨·Ûˆw∞idı>ß◊rknP√.¿RŸ"∂∂Î‚äfí˜_ÿQ!)~*Ω{b∞F]ê#´‘2·≥‹Yˇ≈'ËÒbÅ—¥…o$Õ≈§ﬁ	
b=ﬁ1]Ê£Q=Ycùû7y≠ΩÙÓ∞îO:Õw0V¿úÈKD°EÖñ˜)~n÷Ûq*®UﬂΩÎM~dq-fgÅ&KçúN ãß3Ñ7ŸwÌ†pŒ…¯T∆Ô-¡IÀtÀè^Íôrïj‰œK◊‰ŸÎí”zlÅ¡ÄWxÛÅŒ`æôÛ§g£ÚÄHÖ) Å’’mÒQÑéŸpä6'ÌUÑ¡é-ΩŒ«Äí^@˙πàD}èÛ38«$î∂€{˛¬¥øŸ
'FúﬁiVB‘)Û⁄Q˜0l/¨–MÃÖP ¬lí öÃ¿ÕtÎÃ¯·#´´ÓLŸAåãBFWëä@ ·*ÀKµÅ_o‘N£ëd
/≥ñ2-1,∫ù»k{Ö=√«´éò·÷≈RWN0sPCEÓPO%7à:@N>o?é-Äyç‰•ü®EZƒ∆√NT¨®Õ¢Zo7ÏZò2±:K√˘1«¯(>Ô⁄¢	Ø»inóªO
#ò+`9∫—·2nå∑ãb3[≈Ôæ´€)BûYÑ‘§«°‘∫`–TR1<ß’}ô5}.ñ∏æK∆œıü«fqI.ÈÁ*EqR/4Ù4˚2Ÿ$Á‚Uw tüÿo<5”I5Fè…{Åi—ht
ƒæéV“ÍP†üz˙–~ªˆπ˘\ÿÑÁEº6–z¶Ì˜*Aç-}¬ÎéJ±Äl’ïÿéÄÑf?,6™„˙4€Å‡Ú«AÊ2t>Kw@°?èÅ_œ"∑èõZ}Ô§Tå£‹µŒèÈŒÜüy}´;[TËväI? q’‰ 5MI·π∏∫^gˆµˆµ∞[πQ´€‚ı˙P&qNóbˇXZåsõÎ^7ﬂ#˚éæ3≈—N[HÃ˚iºÕSSﬁ3ê§€O~z(µ∑»‹¡÷	ﬂ0Ä˜z¬o2ÜBë·êåpx.‹∆’’Ü∑æà*‚Æ'ËR÷ÎP‡î´N®Ü™†ƒd( bbMäY›ÒGå⁄Ç"3:B˜™<¡ÅO”a™RÕã‡e‡r˙/∞q≥<éu«.ûﬁÄI·é P3>4ÃØËÛﬁ8…